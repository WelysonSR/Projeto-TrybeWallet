{"version":3,"sources":["reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","actions/index.js","pages/Login.js","components/Header.js","func/fetch.js","components/forms/Select.js","components/FormDespesa.js","components/Table.js","components/EditItem.js","pages/Wallet.js","pages/Erro.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","email","userReducer","state","action","type","currencies","expenses","sum","itemEdit","edit","item","walletReducer","rootReducer","combineReducers","user","wallet","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","walletSum","editItem","Login","password","enableButton","handleChange","bind","validiteitButton","buttonLogin","target","name","value","this","setState","length","test","props","push","history","infoUser","className","placeholder","onChange","disabled","onClick","React","Component","connect","dispatch","userAction","Header","print","getSum","sumWallet","total","forEach","expense","currency","ask","exchangeRates","Number","emailUser","a","fetch","moedas","json","respons","fetchCotacao","Select","label","labelName","selectValue","funcao","htmlFor","id","map","element","i","key","FormDespesa","metodoPagamento","tagValue","method","tag","description","addItem","sumValue","coin","mult","som","decimal","Math","floor","getExpenses","saveWallet","walletCoin","testid","walletSave","Table","subtractionValue","multiplication","toFixed","removeItem","removeSelectedItem","newItems","filter","selectItem","editExpense","expenseItem","find","selectedExpense","itemRemove","EditItem","itemToBeEdited","result","reduce","acc","itemUpdate","updateItem","Wallet","data","Object","entries","coinData","code","Error","App","exact","path","component","Erro","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49f43228.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  email: '',\n};\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'NEW_USER':\n    return {\n      ...state,\n      email: action.state,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default userReducer;\n","const INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  sum: 0,\n  itemEdit: {\n    edit: false,\n    item: {},\n  },\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'NEW_WALLTMOEDA':\n    return { ...state, currencies: action.state };\n  case 'NEW_WALLTSAVE':\n    return { ...state, expenses: [...state.expenses, action.state] };\n  case 'NEW_WALLTSUM':\n    return { ...state, sum: action.state };\n  case 'REMOVE_ITEM':\n    return { ...state, expenses: action.state };\n  case 'EDIT_ITEM':\n    return { ...state, itemEdit: action.state };\n  case 'UPDATE_ITEM':\n    return { ...state, expenses: [...action.state] };\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","const userAction = (state) => ({ type: 'NEW_USER', state });\nconst walletAction = (state) => ({ type: 'NEW_WALLTMOEDA', state });\nconst walletSave = (state) => ({ type: 'NEW_WALLTSAVE', state });\nconst walletSum = (state) => ({ type: 'NEW_WALLTSUM', state });\nconst itemRemove = (state) => ({ type: 'REMOVE_ITEM', state });\nconst editItem = (state) => ({ type: 'EDIT_ITEM', state });\nconst updateItem = (state) => ({ type: 'UPDATE_ITEM', state });\n\nfunction fetchMoeda() {\n  return async (dispatch) => {\n    const moedas = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const respons = await moedas.json();\n    const data = Object.entries(respons);\n    const coinData = data.filter((coin) => coin[0] !== 'USDT')\n      .map((coin) => coin[1].code);\n    dispatch(walletAction(coinData));\n  };\n}\n\nexport { userAction, walletAction, walletSave,\n  walletSum, fetchMoeda, itemRemove, editItem, updateItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userAction } from '../actions';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      enableButton: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validiteitButton = this.validiteitButton.bind(this);\n    this.buttonLogin = this.buttonLogin.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.validiteitButton());\n  }\n\n  validiteitButton() {\n    const { email, password } = this.state;\n    const namber = 6;\n    const validiteitEmail = /\\S+@\\S+\\.\\S+/; // https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n    if (password.length >= namber && validiteitEmail.test(email)) {\n      this.setState({ enableButton: false });\n    } else {\n      this.setState({ enableButton: true });\n    }\n  }\n\n  buttonLogin() {\n    const { history: { push }, infoUser } = this.props;\n    const { email } = this.state;\n    infoUser(email);\n    push('/carteira');\n  }\n\n  render() {\n    const { email, password, enableButton } = this.state;\n    return (\n      <section className=\"container-login\">\n        <h1>TRYBEWALLET</h1>\n        <form>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            className=\"form-control form-login\"\n            placeholder=\"Digite seu email\"\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={ password }\n            className=\"form-control form-login\"\n            placeholder=\"Digite seu senha\"\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"button\"\n            value=\"Entrar\"\n            className=\"btn btn-info btn-login\"\n            disabled={ enableButton }\n            onClick={ this.buttonLogin }\n          />\n        </form>\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  infoUser: (state) => dispatch(userAction(state)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { walletSum } from '../actions';\nimport './Header.css';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const { expenses, sumWallet } = this.props;\n    let total = 0;\n    expenses.forEach((expense) => {\n      const { value, currency, exchangeRates } = expense;\n      const { ask } = exchangeRates[currency];\n      total += Number(value) * Number(ask);\n    });\n    sumWallet(total);\n  }\n\n  print = () => {\n    const { expenses, getSum } = this.props;\n    return expenses.length === 0 ? 0 : getSum;\n  }\n\n  render() {\n    const { emailUser, expenses } = this.props;\n    return (\n      <header>\n        <h1 className=\"logo\">TrybeWallet</h1>\n        {\n          expenses && (\n            <div className=\"info-user\">\n              <p className=\"user-email\">{emailUser}</p>\n              <p>{ this.print()}</p>\n              <p>BRL</p>\n            </div>\n          )\n        }\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  emailUser: state.user.email,\n  expenses: state.wallet.expenses,\n  getSum: state.wallet.sum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sumWallet: (state) => dispatch(walletSum(state)),\n});\n\nHeader.propTypes = {\n  emailUser: PropTypes.string,\n  getSum: PropTypes.number,\n  expenses: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","async function fetchCotacao() {\n  const moedas = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const respons = await moedas.json();\n  return respons;\n}\n\nexport default fetchCotacao;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n  render() {\n    const { label, labelName, selectValue, value, funcao } = this.props;\n    return (\n      <label htmlFor={ label } className=\"form-label\">\n        { labelName }\n        <select\n          name={ label }\n          id={ label }\n          value={ value }\n          onChange={ funcao }\n          className=\"form-select\"\n        >\n          {\n            (selectValue.length > 0) && (\n              selectValue.map((element, i) => (\n                <option key={ i } value={ element }>{element}</option>\n              ))\n            )\n          }\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  labelName: PropTypes.string,\n  selectValue: PropTypes.array,\n}.isRequired;\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { walletSave, walletSum } from '../actions';\nimport fetchCotacao from '../func/fetch';\nimport Select from './forms/Select';\nimport './FormDespesa.css';\n\nconst alimentacao = 'Alimentação';\n\nclass FormDespesa extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      metodoPagamento: ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'],\n      tagValue: [alimentacao, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'],\n      value: 0,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentacao,\n      description: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.sumValue = this.sumValue.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  sumValue(coin) {\n    const { getSum, sumWallet } = this.props;\n    const { currency, value } = this.state;\n    const key = coin[currency];\n    const number = 10;\n    if (currency !== 'BRL') {\n      const mult = Number(value) * Number(key.ask);\n      const som = Number(getSum) + mult;\n      const decimal = number ** 2; // https://pt.stackoverflow.com/questions/252246/decimais-sem-arredondar-em-javascript\n      sumWallet(Math.floor(som * decimal) / decimal);\n    }\n  }\n\n  async addItem() {\n    const { getExpenses, saveWallet } = this.props;\n    const { value, currency, method, tag, description } = this.state;\n    const coin = await fetchCotacao();\n    const item = {\n      id: (getExpenses <= 0) ? 0 : getExpenses.length,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates: coin,\n    };\n    this.sumValue(coin, value, currency);\n    this.setState({\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentacao,\n      description: '',\n    });\n    saveWallet(item);\n  }\n\n  render() {\n    const { value, currency, method, tag,\n      description, metodoPagamento, tagValue } = this.state;\n    const { walletCoin } = this.props;\n    return (\n      <form className=\"form-description\">\n        <label htmlFor=\"valor\" className=\"form-label\">\n          Valor:\n          <input\n            type=\"number\"\n            value={ value }\n            name=\"value\"\n            id=\"value\"\n            className=\"form-control\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <Select\n          value={ currency }\n          label=\"currency\"\n          labelName=\"Moeda:\"\n          selectValue={ walletCoin }\n          funcao={ this.handleChange }\n        />\n        <Select\n          value={ method }\n          label=\"method\"\n          labelName=\"Método de pagamento:\"\n          testid=\"method-input\"\n          selectValue={ metodoPagamento }\n          funcao={ this.handleChange }\n        />\n        <Select\n          value={ tag }\n          label=\"tag\"\n          labelName=\"Tag:\"\n          testid=\"tag-input\"\n          selectValue={ tagValue }\n          funcao={ this.handleChange }\n        />\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n          <input\n            type=\"text\"\n            value={ description }\n            name=\"description\"\n            className=\"form-control description\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <input\n          type=\"button\"\n          value=\"Adicionar despesa\"\n          className=\"btn btn-primary btn-add\"\n          onClick={ this.addItem }\n        />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  walletCoin: state.wallet.currencies,\n  getExpenses: state.wallet.expenses,\n  getSum: state.wallet.sum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveWallet: (state) => dispatch(walletSave(state)),\n  sumWallet: (state) => dispatch(walletSum(state)),\n});\n\nFormDespesa.propTypes = {\n  walletCoin: PropTypes.string,\n  getExpenses: PropTypes.array,\n  getSum: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDespesa);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { itemRemove, walletSum, editItem } from '../actions';\nimport './Table.css';\n\nclass Table extends React.Component {\n  subtractionValue = (item) => {\n    const { getSum, sumWallet } = this.props;\n    const multiplication = item.value * item.exchangeRates[item.currency].ask;\n    const result = getSum - multiplication;\n    sumWallet(Number(result).toFixed(2));\n  }\n\n  removeItem = (item) => {\n    const { getExpenses, removeSelectedItem } = this.props;\n    const newItems = getExpenses.filter((selectItem) => selectItem.id !== item.id);\n    this.subtractionValue(item);\n    removeSelectedItem(newItems);\n  }\n\n  editItem = ({ id }) => {\n    const { getExpenses, itemEdit, editExpense } = this.props;\n    const expense = getExpenses.find((selectedExpense) => selectedExpense.id === id);\n    const expenseItem = {\n      edit: true,\n      item: expense,\n    };\n    editExpense('editar');\n    itemEdit(expenseItem);\n  }\n\n  render() {\n    const { getExpenses } = this.props;\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            getExpenses.map((item) => (\n              <tr key={ item.id }>\n                <td>{item.description}</td>\n                <td>{item.tag}</td>\n                <td>{item.method}</td>\n                <td>{Number(item.value).toFixed(2)}</td>\n                <td>\n                  {item.exchangeRates[item.currency].name}\n                </td>\n                <td>{Number(item.exchangeRates[item.currency].ask).toFixed(2)}</td>\n                <td>\n                  {Number(item.value * item.exchangeRates[item.currency].ask)\n                    .toFixed(2)}\n                </td>\n                <td>Real</td>\n                <td>\n                  <input\n                    type=\"button\"\n                    value=\"Editar\"\n                    className=\"btn btn-warning\"\n                    onClick={ () => this.editItem(item) }\n                  />\n                  <input\n                    type=\"button\"\n                    value=\"Deletar\"\n                    className=\"btn btn-danger\"\n                    onClick={ () => this.removeItem(item) }\n                  />\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  getExpenses: state.wallet.expenses,\n  getSum: state.wallet.sum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeSelectedItem: (state) => dispatch(itemRemove(state)),\n  sumWallet: (state) => dispatch(walletSum(state)),\n  itemEdit: (state) => dispatch(editItem(state)),\n});\n\nTable.propTypes = {\n  getExpenses: PropTypes.array,\n  removeSelectedItem: PropTypes.func,\n  sumWallet: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editItem, updateItem, walletSum } from '../actions';\nimport Select from './forms/Select';\nimport './FormDespesa.css';\n\nconst alimentacao = 'Alimentação';\n\nclass EditItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      metodoPagamento: ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'],\n      tagValue: [alimentacao, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'],\n      value: 0,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentacao,\n      description: '',\n      id: '',\n      exchangeRates: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.edit = this.edit.bind(this);\n  }\n\n  componentDidMount() {\n    const { itemToBeEdited: { item } } = this.props;\n    const { value, currency, method, tag, description, id, exchangeRates } = item;\n    this.setState({ value, currency, method, tag, description, id, exchangeRates });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  sumValue() {\n    const { sumWallet, getExpenses } = this.props;\n    const result = getExpenses.reduce((acc, expense) => {\n      const multiplication = expense.exchangeRates[expense.currency].ask * expense.value;\n      const resultacc = acc + multiplication;\n      return resultacc;\n    }, 0);\n    sumWallet(Number(result).toFixed(2));\n  }\n\n  edit() {\n    const { itemEdit, getExpenses, itemUpdate, editExpense } = this.props;\n    const { id, value, currency, method, tag, description, exchangeRates } = this.state;\n    const reset = {\n      edit: false,\n      item: {},\n    };\n    const item = {\n      id,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates,\n    };\n    getExpenses[id] = item;\n    itemUpdate(getExpenses);\n    editExpense();\n    itemEdit(reset);\n    this.sumValue();\n  }\n\n  render() {\n    const { value, currency, method, tag,\n      description, metodoPagamento, tagValue } = this.state;\n    const { walletCoin } = this.props;\n    return (\n      <form className=\"form-description\">\n        <label htmlFor=\"valor\" className=\"form-label\">\n          Valor:\n          <input\n            type=\"number\"\n            value={ value }\n            name=\"value\"\n            id=\"value\"\n            className=\"form-control\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <Select\n          value={ currency }\n          label=\"currency\"\n          labelName=\"Moeda:\"\n          testid=\"currency-input\"\n          selectValue={ walletCoin }\n          funcao={ this.handleChange }\n        />\n        <Select\n          value={ method }\n          label=\"method\"\n          labelName=\"Método de pagamento:\"\n          testid=\"method-input\"\n          selectValue={ metodoPagamento }\n          funcao={ this.handleChange }\n        />\n        <Select\n          value={ tag }\n          label=\"tag\"\n          labelName=\"Tag:\"\n          testid=\"tag-input\"\n          selectValue={ tagValue }\n          funcao={ this.handleChange }\n        />\n        <label htmlFor=\"description\" className=\"form-label\">\n          Description\n          <input\n            type=\"text\"\n            value={ description }\n            name=\"description\"\n            className=\"form-control description\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <input\n          type=\"button\"\n          value=\"Editar despesa\"\n          onClick={ this.edit }\n          className=\"btn btn-primary btn-add\"\n        />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  getExpenses: state.wallet.expenses,\n  walletCoin: state.wallet.currencies,\n  itemToBeEdited: state.wallet.itemEdit,\n  getSum: state.wallet.sum,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  itemEdit: (state) => dispatch(editItem(state)),\n  itemUpdate: (state) => dispatch(updateItem(state)),\n  sumWallet: (state) => dispatch(walletSum(state)),\n});\n\nEditItem.propTypes = {\n  walletCoin: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchMoeda } from '../actions';\nimport Header from '../components/Header';\nimport FormDespesa from '../components/FormDespesa';\nimport Table from '../components/Table';\nimport EditItem from '../components/EditItem';\n\nclass Wallet extends React.Component {\n  state = { edit: false }\n\n  componentDidMount() {\n    const { walletCoin } = this.props;\n    walletCoin();\n  }\n\n  editExpense = (action) => {\n    if (action === 'editar') {\n      this.setState({ edit: true });\n    } else {\n      this.setState({ edit: false });\n    }\n  }\n\n  render() {\n    const { edit } = this.state;\n    return (\n      <section>\n        <Header />\n        {\n          edit ? (\n            <EditItem editExpense={ this.editExpense } />\n          ) : (\n            <FormDespesa />\n          )\n        }\n        <Table editExpense={ this.editExpense } />\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  item: state.wallet.itemEdit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  walletCoin: () => dispatch(fetchMoeda()),\n});\n\nWallet.propTypes = {\n  walletCoin: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Erro.css';\n\nclass Error extends React.Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <section className=\"section-erro\">\n        <h1 className=\"h1-erro\">Pagina não encontrada</h1>\n        <input\n          type=\"button\"\n          value=\"Login\"\n          className=\"btn btn-primary\"\n          onClick={ () => history.push('/') }\n        />\n      </section>\n    );\n  }\n}\n\nError.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default Error;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport Erro from './pages/Erro';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n      <Route exact path=\"*\" component={ Erro } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}